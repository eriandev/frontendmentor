---
interface Props {
  class?: string
}

const { class: customCssClasses } = Astro.props
---

<script>
  import { cardCVC } from '@/scripts/declareRefs.ts'

  cardCVC?.addEventListener('click', () => {
    if (cardCVC?.type === 'password') {
      cardCVC.setAttribute('type', 'text')
      cardCVC.classList.add('text-[10px]', 'lg:text-xs')
      cardCVC.classList.remove('text-xs', 'lg:text-sm')
      return
    }

    cardCVC?.setAttribute('type', 'password')
    cardCVC?.classList.add('text-xs', 'lg:text-sm')
    cardCVC?.classList.remove('text-[10px]', 'lg:text-xs')
  })
</script>

<article
  class:list={[
    'bg-credit-card-back grid h-40 w-[286px] grid-rows-[repeat(3,fit-content(100%))] gap-4 rounded-lg pt-4 text-white shadow-2xl lg:z-10 lg:h-60 lg:w-[448px] lg:gap-6 lg:pt-6',
    customCssClasses,
  ]}
>
  <div class="h-9 w-full bg-black lg:h-[54px]"></div>

  <div class="px-[26px] lg:px-10">
    <div
      class="from-gray to-gray block rounded-md bg-gradient-to-r via-[hsl(212,15%,80%)] px-3.5 py-2.5 text-right lg:px-5 lg:py-3.5"
    >
      <input
        id="cvc"
        value="000"
        type="password"
        aria-label="secret cvc"
        class="w-7 cursor-pointer bg-transparent text-right text-xs font-thin tracking-widest outline-none lg:text-sm"
        readonly
      />
    </div>
  </div>
</article>
